# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    steps:
    - name: Setup Java 8
      uses: actions/setup-java@v1
      with:
        java-version: '8'
        java-package: jdk
        architecture: x64
    - name: Set java 8 env var
      run: export JDK_16=$JAVA_HOME && export JDK_17=$JAVA_HOME && export JDK_18=$JAVA_HOME
    - name: Setup Java 9
      uses: actions/setup-java@v1
      with:
        java-version: '9'
        java-package: jdk
        architecture: x64
    - name: Set java 8 env var
      run: export JDK_9=$JAVA_HOME
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # build cache
    - name: Cache Gradle Cache
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}-${{ hashFiles('**/gradle.properties') }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Cache gradle wrapper
      uses: actions/cache@v2
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
    - name: test
      run: ./gradlew --info :compiler-plugin:test --tests "com.google.devtools.ksp.test.KotlinKSPTestGenerated.*" -PcompilerTestEnabled=true
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-reports
        path: compiler-plugin/build/reports
